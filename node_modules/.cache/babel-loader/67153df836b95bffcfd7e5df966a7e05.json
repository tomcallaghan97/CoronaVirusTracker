{"ast":null,"code":"import _classCallCheck from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Chart from\"chart.js\";var TimeChart=/*#__PURE__*/function(_Component){_inherits(TimeChart,_Component);function TimeChart(){var _this;_classCallCheck(this,TimeChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(TimeChart).call(this));_this.chartRef=React.createRef();_this.state={casesList:[],country:null,language:'en',phrase:null,opts:[],phrases:[{\"lang\":\"mk\",\"language\":\"Јазик\",\"country\":\"Држава\",\"title\":\"Корона Статистика\",\"errorMsg\":\"Ве молиме, внесете држава.\",\"totalCases\":\"Вкупно случаи\",\"totalDeaths\":\"Вкупно смртни случаи\",\"active\":\"Активни\",\"recovered\":\"Излечени\",\"todayCases\":\"Денешни случаи\",\"todayDeaths\":\"Денешни смртни случаи\"},{\"lang\":\"en\",\"totalCases\":\"Total cases\",\"totalDeaths\":\"Total deaths\",\"active\":\"Active\",\"recovered\":\"Recovered\",\"todayCases\":\"Today cases\",\"todayDeaths\":\"Today deaths\",\"errorMsg\":\"Please, input a country.\",\"title\":\"Coronavirus Statistics\",\"language\":\"Language\",\"country\":\"Country\"}]};_this.setCountry();var phrase=_this.state.phrases[1];document.title=phrase.title;_this.state.phrase=phrase;return _this;}_createClass(TimeChart,[{key:\"renderTableData\",value:function renderTableData(country,orderBy){var _this2=this;this.state.country=country;//       fetch('https://coronavirus-19-api.herokuapp.com/countries')\nfetch('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country='+country,{headers:{'X-RapidAPI-Host':'coronavirus-monitor.p.rapidapi.com','X-RapidAPI-Key':process.env.REACT_APP_API_KEY}}).then(function(results){return results.json();}).then(function(data){var casesList=[];var countriesList=[];data.stat_by_country.map(function(c){try{c.total_cases=c.total_cases.replace(',','');c.total_deaths=c.total_deaths.replace(',','');c.total_recovered=c.total_recovered.replace(',','');c.new_deaths=c.new_deaths.replace(',','');c.new_cases=c.new_cases.replace(',','');c.active_cases=c.active_cases.replace(',','');}catch(_unused){}return casesList.push({\"cases\":c.total_cases,\"country\":c.country_name,\"deaths\":c.total_deaths,\"recovered\":c.total_recovered,\"todayDeaths\":c.new_deaths,\"todayCases\":c.new_cases,\"active\":c.active_cases,\"time\":c.record_date}),countriesList.push(c.country_name);});_this2.drawChartJS(casesList,\"\",orderBy);/*            data.stat_by_country.map((c)=>{  \n             return(\n                 <tr key={c.country_name}>\n                     <td>{c.country_name}</td>\n                     <td>{c.cases}</td>\n                     <td>{c.new_cases}</td>\n                     <td class=\"death\">{c.deaths}</td>\n                     <td>{c.new_deaths}</td>\n                     <td class=\"recovered\">{c.total_recovered}</td>\n                     <td>{c.active_cases}</td>\n                 </tr>\n                )\n            });*/_this2.setState({casesList:casesList});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.renderTableData(this.props.country.country);//        this.setCountry();    \n}},{key:\"getTimeline\",value:function getTimeline(orderBy){if(this.state.country!=undefined){this.renderTableData(this.state.country,orderBy);}else{alert(this.state.phrase.errorMsg);}}},{key:\"setCountry\",value:function setCountry(){var _this3=this;var opts=[];var countries=[];fetch('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',{headers:{'X-RapidAPI-Host':'coronavirus-monitor.p.rapidapi.com','X-RapidAPI-Key':'e9843df6f7mshaa54667ec07baf1p12224cjsn04cf86d86a81'}}).then(function(results){return results.json();}).then(function(data){data.countries_stat.map(function(c){countries.push(c.country_name);});countries.sort();countries.forEach(function(c){if(_this3.props.country.country==c){opts.push(React.createElement(\"option\",{key:c,selected:true,value:c},\" \",c,\" \"));}else{opts.push(React.createElement(\"option\",{key:c,value:c},\" \",c,\" \"));}});_this3.state.opts=opts;});}},{key:\"drawChartJS\",value:function drawChartJS(casesList,str,orderBy){if(str==null){str=\"\";}var myChartRef=this.chartRef.current.getContext(\"2d\");var deathList=[];var countryList=[];var timelist=[];var caseList=[];var todayDeathsList=[];var todayCasesList=[];var activeList=[];var recoveredList=[];switch(orderBy){case\"asc\":casesList.sort(function(a,b){return new Date(a)>new Date(b)?-1:1;});break;case\"desc\":casesList.sort(function(a,b){return new Date(a)>new Date(b)?1:-1;});break;default:casesList.sort(function(a,b){return new Date(a)>new Date(b)?-1:1;});break;}for(var i=0;i<casesList.length;i++){if(casesList[i].country.toLowerCase().includes(str.toLowerCase())){var date=new Date(casesList[i].time);var ye=new Intl.DateTimeFormat('en',{year:'numeric'}).format(date);var mo=new Intl.DateTimeFormat('en',{month:'short'}).format(date);var da=new Intl.DateTimeFormat('en',{day:'2-digit'}).format(date);timelist.push(da+\".\"+mo);if(true){deathList.push(casesList[i].deaths);countryList.push(casesList[i].country);caseList.push(casesList[i].cases);todayDeathsList.push(casesList[i].todayDeaths);todayCasesList.push(casesList[i].todayCases);activeList.push(casesList[i].active);recoveredList.push(casesList[i].recovered);}}}if(str!=null&&str!=\"\"){try{this.state.country=countryList[0];}catch(_unused2){}}var datasetBars=[];var phrase=this.state.phrases[1];for(var index=0;index<this.state.phrases.length;index++){if(this.state.phrases[index].lang==this.state.language){phrase=this.state.phrases[index];}}document.title=phrase.title;if(str===\"\"){datasetBars=[{label:phrase.totalDeaths,type:\"line\",data:deathList,borderColor:\"#7F171F\",fill:\"#7F171F\"},{label:phrase.totalCases,data:caseList,type:\"line\",borderColor:\" #003366\",fill:\" #003366\"},{label:phrase.todayCases,type:\"line\",borderColor:\"#B67721\",fill:\"#B67721\",data:todayCasesList},{label:phrase.recovered,type:\"line\",borderColor:\"#21B6A8\",fill:\"#21B6A8\",data:recoveredList},{label:phrase.todayDeaths,type:\"line\",borderColor:\"#B6212D\",fill:\"#B6212D\",data:todayDeathsList},{label:phrase.active,type:\"line\",borderColor:\"#177F75\",fill:\"#177F75\",data:activeList}];}else{datasetBars=[{label:phrase.totalDeaths,type:\"bar\",data:deathList,backgroundColor:\"#7F171F\",fill:\"#7F171F\"},{label:phrase.totalCases,data:caseList,type:\"bar\",backgroundColor:\" #003366\",fill:\" #003366\"},{label:phrase.todayCases,type:\"bar\",backgroundColor:\"#B67721\",fill:\"#B67721\",data:todayCasesList},{label:phrase.recovered,type:\"bar\",backgroundColor:\"#21B6A8\",fill:\"#21B6A8\",data:recoveredList},{label:phrase.todayDeaths,type:\"bar\",backgroundColor:\"#B6212D\",data:todayDeathsList,labels:todayDeathsList},{label:phrase.active,type:\"bar\",labels:activeList,backgroundColor:\"#177F75\",fill:\"#177F75\",data:activeList}];}try{this.myChart.destroy();}catch(_unused3){}this.myChart=new Chart(myChartRef,{type:\"line\",data:{//Bring in data\nlabels:timelist,datasets:datasetBars},options:{maintainAspectRatio:false,responsive:true}});this.myChart.canvas.parentNode.style.height='90vh';}},{key:\"getAllCountries\",value:function getAllCountries(){if(this.state.country!=undefined){window.location.href='/';}else{alert(this.state.phrase.errorMsg);}}},{key:\"changeLanguage\",value:function changeLanguage(lang){this.setState({language:lang});this.state.language=lang;this.getTimeline();}},{key:\"getLang\",value:function getLang(){return this.state.language;}},{key:\"render\",value:function render(){var _this4=this;return React.createElement(\"div\",null,React.createElement(\"h1\",null,this.state.language==='en'?'Corona Virus Statistics':'Статистика за Корона вирусот'),React.createElement(\"div\",{className:\"infoData\"},React.createElement(\"div\",null,this.state.language==='en'?'Language:':'Јазик:',React.createElement(\"select\",{className:\"infoChild\",onChange:function onChange(e){return _this4.changeLanguage(e.target.value);}},React.createElement(\"option\",{value:\"en\"},\"English\"),React.createElement(\"option\",{value:\"mk\"},\"\\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"))),React.createElement(\"div\",null,this.state.language==='en'?'Country:':'Држава:',React.createElement(\"select\",{className:\"infoChild\",id:\"countrySelect\",onChange:function onChange(e){return _this4.renderTableData(e.target.value);}},this.state.opts),React.createElement(\"input\",{type:\"button\",className:\"infoChild\",onClick:function onClick(e){return _this4.getTimeline(_this4.state.casesList,e.target.value);},value:this.state.language==='en'?'Choose country':'Избери држава'})),React.createElement(\"div\",null,this.state.language==='en'?'Order by':'Сортирај по',React.createElement(\"select\",{className:\"infoChild\",onChange:function onChange(e){return _this4.getTimeline(e.target.value);}},React.createElement(\"option\",{value:\"asc\"},this.state.language==='en'?'Date аscending':'Датум растечки'),React.createElement(\"option\",{value:\"desc\"},this.state.language==='en'?'Date descending':'Датум опаѓачки'))),React.createElement(\"input\",{type:\"button\",className:\"infoChild\",onClick:function onClick(e){return _this4.getAllCountries();},value:this.state.language==='en'?'All countries':'Сите држави'})),React.createElement(\"h2\",null,this.state.country),React.createElement(\"canvas\",{id:\"myChart\",ref:this.chartRef}));}}]);return TimeChart;}(Component);export default TimeChart;","map":{"version":3,"sources":["/Users/tom/Desktop/coronavirus-statistics/src/TimeChart.js"],"names":["React","Component","Chart","TimeChart","chartRef","createRef","state","casesList","country","language","phrase","opts","phrases","setCountry","document","title","orderBy","fetch","headers","process","env","REACT_APP_API_KEY","then","results","json","data","countriesList","stat_by_country","map","c","total_cases","replace","total_deaths","total_recovered","new_deaths","new_cases","active_cases","push","country_name","record_date","drawChartJS","setState","renderTableData","props","undefined","alert","errorMsg","countries","countries_stat","sort","forEach","str","myChartRef","current","getContext","deathList","countryList","timelist","caseList","todayDeathsList","todayCasesList","activeList","recoveredList","a","b","Date","i","length","toLowerCase","includes","date","time","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","deaths","cases","todayDeaths","todayCases","active","recovered","datasetBars","index","lang","label","totalDeaths","type","borderColor","fill","totalCases","backgroundColor","labels","myChart","destroy","datasets","options","maintainAspectRatio","responsive","canvas","parentNode","style","height","window","location","href","getTimeline","e","changeLanguage","target","value","getAllCountries"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Chart from \"chart.js\";\n\n\nclass TimeChart extends Component {\n    myChart;\n    chartRef = React.createRef();\n    constructor(){\n        super();\n        this.state={\n            casesList:[],\n            country: null,\n            language: 'en',\n            phrase: null,\n            opts: [],\n            phrases: [{\"lang\": \"mk\",\"language\": \"Јазик\",\"country\":\"Држава\", \"title\": \"Корона Статистика\", \"errorMsg\":\"Ве молиме, внесете држава.\", \"totalCases\":\"Вкупно случаи\", \"totalDeaths\":\"Вкупно смртни случаи\", \"active\":\"Активни\",\"recovered\":\"Излечени\",\"todayCases\":\"Денешни случаи\",\"todayDeaths\":\"Денешни смртни случаи\"}, {\"lang\":\"en\",\"totalCases\":\"Total cases\", \"totalDeaths\": \"Total deaths\", \"active\":\"Active\",\"recovered\":\"Recovered\",\"todayCases\":\"Today cases\",\"todayDeaths\":\"Today deaths\",  \"errorMsg\":\"Please, input a country.\",\"title\":\"Coronavirus Statistics\",\"language\": \"Language\",\"country\":\"Country\"}],\n        };\n        this.setCountry();\n        \n        let phrase = this.state.phrases[1];\n        document.title = phrase.title;\n        this.state.phrase = phrase;\n\n    }\n    \n     renderTableData(country, orderBy) {\n         this.state.country = country;\n //       fetch('https://coronavirus-19-api.herokuapp.com/countries')\n        fetch('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country='+country,\n        {  \n            headers: {\n              'X-RapidAPI-Host': 'coronavirus-monitor.p.rapidapi.com', \n              'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n            }\n        })\n            .then(results=>{\n            return results.json();\n        })\n        .then(data => {\n            \n            let casesList = [];\n            let countriesList = [];\n            data.stat_by_country.map((c)=>{\n                \n                try{\n                    c.total_cases = c.total_cases.replace(',','');\n                    c.total_deaths = c.total_deaths.replace(',','');\n                    c.total_recovered = c.total_recovered.replace(',','');\n                    c.new_deaths = c.new_deaths.replace(',','');\n                    c.new_cases = c.new_cases.replace(',','');\n                    c.active_cases = c.active_cases.replace(',','');\n                }catch{\n                    \n                }\n                return(\n                    casesList.push({\"cases\": c.total_cases, \"country\":c.country_name, \"deaths\":c.total_deaths, \"recovered\":c.total_recovered, \"todayDeaths\":c.new_deaths, \"todayCases\":c.new_cases, \"active\":c.active_cases, \"time\":c.record_date}),\n                    countriesList.push(c.country_name)\n                )\n            });\n            this.drawChartJS(casesList, \"\", orderBy);\n/*            data.stat_by_country.map((c)=>{  \n             return(\n                 <tr key={c.country_name}>\n                     <td>{c.country_name}</td>\n                     <td>{c.cases}</td>\n                     <td>{c.new_cases}</td>\n                     <td class=\"death\">{c.deaths}</td>\n                     <td>{c.new_deaths}</td>\n                     <td class=\"recovered\">{c.total_recovered}</td>\n                     <td>{c.active_cases}</td>\n                 </tr>\n                )\n            });*/   \n            \n            this.setState({casesList: casesList});\n        })\n     }\n     componentDidMount() {\n        this.renderTableData(this.props.country.country);  \n//        this.setCountry();    \n    }\n    getTimeline(orderBy)\n    {\n        if(this.state.country != undefined)\n        {        \n            this.renderTableData(this.state.country, orderBy);  \n        }\n        else{\n            alert(this.state.phrase.errorMsg);\n        }\n    }\n\n    setCountry()\n    {\n        let opts = []; \n        let countries = [];\n        fetch('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n        {  \n            headers: {\n              'X-RapidAPI-Host': 'coronavirus-monitor.p.rapidapi.com', \n              'X-RapidAPI-Key': 'e9843df6f7mshaa54667ec07baf1p12224cjsn04cf86d86a81'\n            }\n        })\n            .then(results=>{\n            return results.json();\n        })\n        .then(data => {\n            data.countries_stat.map((c)=>{\n                countries.push(c.country_name);\n            });\n            countries.sort();\n            countries.forEach(c => {\n                if(this.props.country.country == c)\n                    {\n                        opts.push(<option key= {c} selected value={c}> {c} </option>);    \n                    }\n                    else{\n                        opts.push(<option key= {c} value={c}> {c} </option>); \n                    }\n            });\n            this.state.opts = opts;\n    \n        })   \n    }\n    drawChartJS(casesList, str, orderBy){\n        if(str == null)\n        {\n            str=\"\";\n        }\n        \n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        let deathList = [];\n        let countryList = [];\n        let timelist = [];\n        let caseList = [];\n        let todayDeathsList = [];\n        let todayCasesList = [];\n        let activeList = [];\n        let recoveredList = [];\n        \n        switch(orderBy){\n            case \"asc\":\n                casesList.sort((a, b) => (new Date(a)>new Date(b)) ? -1 : 1);\n                break;\n            case \"desc\":\n                casesList.sort((a, b) => (new Date(a)>new Date(b)) ? 1 : -1);\n                break;\n            default:\n                casesList.sort((a, b) => (new Date(a)>new Date(b)) ? -1 : 1);\n                break;\n        }\n\n        for(let i = 0; i<casesList.length;i++)\n        {\n            if(casesList[i].country.toLowerCase().includes(str.toLowerCase())){\n\n                let date = new Date(casesList[i].time);\n                const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date)\n                const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(date)\n                const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date)\n\n                timelist.push(da+\".\"+mo);\n                if(true){\n                deathList.push(casesList[i].deaths);\n                countryList.push(casesList[i].country);\n                caseList.push(casesList[i].cases);\n                todayDeathsList.push(casesList[i].todayDeaths);\n                todayCasesList.push(casesList[i].todayCases);\n                activeList.push(casesList[i].active);\n                recoveredList.push(casesList[i].recovered)\n                }\n            }\n        }\n        if(str != null && str != \"\")\n        {\n            try{\n            this.state.country = countryList[0];\n            }\n            catch{}\n        }\n\n        let datasetBars = [];\n        let phrase = this.state.phrases[1];\n        for (let index = 0; index < this.state.phrases.length; index++) {\n            if(this.state.phrases[index].lang == this.state.language)\n            {\n                phrase = this.state.phrases[index];   \n            }\n        }\n        document.title = phrase.title;\n\n        if(str===\"\")\n        {\n            datasetBars = [\n                {\n                    label: phrase.totalDeaths,\n                    type: \"line\",\n                    data: deathList,\n                    borderColor: \"#7F171F\",\n                    fill: \"#7F171F\",\n                },\n                {\n                    label: phrase.totalCases,\n                    data: caseList,\n                    type: \"line\",\n                    borderColor:\" #003366\",\n                    fill:\" #003366\",\n                },\n                {\n                    label: phrase.todayCases,\n                    type: \"line\",\n                    borderColor:\"#B67721\",\n                    fill:\"#B67721\",\n                    data: todayCasesList,\n                },\n                {\n                    label: phrase.recovered,\n                    type: \"line\",\n                    borderColor:\"#21B6A8\",\n                    fill:\"#21B6A8\",\n                    data: recoveredList,\n                },\n                {\n                    label: phrase.todayDeaths,\n                    type: \"line\",\n                    borderColor: \"#B6212D\",\n                    fill: \"#B6212D\",\n                    data: todayDeathsList,\n                },\n                {\n                    label: phrase.active,\n                    type: \"line\",\n                    borderColor:\"#177F75\",\n                    fill:\"#177F75\",\n                    data: activeList,\n                }\n            ];\n        }\n        else{\n            datasetBars = [{\n                  label: phrase.totalDeaths,\n                  type: \"bar\",\n                  data: deathList,\n                  backgroundColor: \"#7F171F\",\n                  fill: \"#7F171F\",\n                },\n              {                    \n                  label: phrase.totalCases,\n                  data: caseList,\n                  type: \"bar\",\n                  backgroundColor:\" #003366\",\n                  fill:\" #003366\",\n              },\n              {\n                  label: phrase.todayCases,\n                  type: \"bar\",\n                  backgroundColor:\"#B67721\",\n                  fill:\"#B67721\",\n                  data: todayCasesList,\n              },\n              {\n                  label: phrase.recovered,\n                  type: \"bar\",\n                  backgroundColor:\"#21B6A8\",\n                  fill:\"#21B6A8\",\n                  data: recoveredList,\n              },\n              {\n                  label: phrase.todayDeaths,\n                  type: \"bar\",\n                  backgroundColor: \"#B6212D\",\n                  data: todayDeathsList,\n                  labels: todayDeathsList\n              },\n              {\n                  label: phrase.active,\n                  type: \"bar\",\n                  labels: activeList,\n                  backgroundColor:\"#177F75\",\n                  fill:\"#177F75\",\n                  data: activeList,\n              }\n            ]\n        }\n        \n        \n        try{\n            this.myChart.destroy();\n        }\n        catch{}\n      this.myChart = new Chart(myChartRef, {\n          type: \"line\",\n          data: {\n              //Bring in data\n              labels: timelist,\n              datasets: datasetBars\n          },\n          options: { \n              maintainAspectRatio: false,\n              responsive: true\n          }\n          \n      });\n      this.myChart.canvas.parentNode.style.height = '90vh';\n\n    }\n    getAllCountries()\n    {\n        if(this.state.country != undefined)\n        {\n            window.location.href = '/';\n        }\n        else{\n            alert(this.state.phrase.errorMsg);\n        }\n    }\n      changeLanguage(lang) {\n        this.setState({\n          language:  lang\n        })\n        this.state.language = lang;\n        this.getTimeline();\n      }\n      getLang(){\n          return this.state.language;\n      }\n    render(){\n     return (\n         \n     <div>\n    <h1>{this.state.language === 'en' ? 'Corona Virus Statistics' : 'Статистика за Корона вирусот'}</h1>\n     <div className=\"infoData\">\n         <div>\n         {this.state.language === 'en' ? 'Language:' : 'Јазик:'}\n         \n            <select className=\"infoChild\" onChange={(e)=>this.changeLanguage(e.target.value)}>\n                <option value=\"en\">English</option>\n                <option value=\"mk\">Македонски</option>\n            </select>\n            </div><div>\n            {this.state.language === 'en' ? 'Country:' : 'Држава:'}\n            <select className=\"infoChild\" id=\"countrySelect\" onChange={(e)=>this.renderTableData(e.target.value)}>\n                  {this.state.opts}\n            </select>\n\n            <input type=\"button\" className=\"infoChild\" onClick={(e) => this.getTimeline(this.state.casesList, e.target.value)} value={this.state.language === 'en' ? 'Choose country' : 'Избери држава'} ></input>\n            </div><div>{this.state.language === 'en' ? 'Order by' : 'Сортирај по'}\n            <select className=\"infoChild\" onChange={(e)=>this.getTimeline(e.target.value)}>\n                <option value=\"asc\">{this.state.language === 'en' ? 'Date аscending' : 'Датум растечки'}</option>\n                <option value=\"desc\">{this.state.language === 'en' ? 'Date descending' : 'Датум опаѓачки'}</option>\n            </select>\n            </div>        \n            <input type=\"button\" className=\"infoChild\" onClick={(e) => this.getAllCountries()} value={this.state.language === 'en' ? 'All countries' : 'Сите држави'} ></input>\n\n        </div>\n        <h2>{this.state.country}</h2>\n            <canvas \n                id=\"myChart\"\n                ref={this.chartRef}\n            />\n        </div>\n    )\n    }\n  }\n      \n  export default TimeChart;"]},"metadata":{},"sourceType":"module"}