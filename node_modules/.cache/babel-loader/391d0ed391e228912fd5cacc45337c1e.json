{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/tom/Desktop/coronavirus-statistics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Chart from\"chart.js\";var BarChart=/*#__PURE__*/function(_Component){_inherits(BarChart,_Component);function BarChart(){var _this;_classCallCheck(this,BarChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(BarChart).call(this));_this.chartRef=React.createRef();_this.state={casesList:[],country:null,language:'en',phrases:[{\"lang\":\"mk\",\"language\":\"Јазик\",\"country\":\"Држава\",\"title\":\"Корона Статистика\",\"errorMsg\":\"Ве молиме, внесете држава.\",\"totalCases\":\"Вкупно случаи\",\"totalDeaths\":\"Вкупно смртни случаи\",\"active\":\"Активни\",\"recovered\":\"Излечени\",\"todayCases\":\"Денешни случаи\",\"todayDeaths\":\"Денешни смртни случаи\"},{\"lang\":\"en\",\"totalCases\":\"Total cases\",\"totalDeaths\":\"Total deaths\",\"active\":\"Active\",\"recovered\":\"Recovered\",\"todayCases\":\"Today cases\",\"todayDeaths\":\"Today deaths\",\"errorMsg\":\"Please, input a country.\",\"title\":\"Coronavirus Statistics\",\"language\":\"Language\",\"country\":\"Country\"}],phrase:null};_this.state.phrase=_this.state.phrases[1];document.title=_this.state.phrase.title;return _this;}_createClass(BarChart,[{key:\"renderTableData\",value:function renderTableData(){var _this2=this;fetch('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',{headers:{'X-RapidAPI-Host':'coronavirus-monitor.p.rapidapi.com','X-RapidAPI-Key':process.env.REACT_APP_API_KEY}}).then(function(results){return results.json();}).then(function(data){var casesList=[];var countriesList=[];data.countries_stat.map(function(c){return casesList.push({\"cases\":c.cases.replace(',',''),\"country\":c.country_name,\"deaths\":c.deaths.replace(',',''),\"recovered\":c.total_recovered.replace(',',''),\"todayDeaths\":c.new_deaths.replace(',',''),\"todayCases\":c.new_cases.replace(',',''),\"active\":c.active_cases.replace(',','')}),countriesList.push(c.country_name);});_this2.drawChartJS(casesList);_this2.setState({casesList:casesList});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.renderTableData();}},{key:\"getTimeline\",value:function getTimeline(){if(this.state.country!==undefined&&this.state.country!==null){window.location.href='/timechart/country/'+this.state.country;}else{alert(this.state.phrase.errorMsg);}}},{key:\"drawChartJS\",value:function drawChartJS(casesList,str,orderBy){if(str==null){str=\"\";}var myChartRef=this.chartRef.current.getContext(\"2d\");var deathList=[];var countryList=[];var caseList=[];var todayDeathsList=[];var todayCasesList=[];var activeList=[];var recoveredList=[];switch(orderBy){case\"active\":casesList.sort(function(a,b){return parseInt(a.active)>parseInt(b.active)?-1:1;});break;case\"recovered\":casesList.sort(function(a,b){return parseInt(a.recovered)>parseInt(b.recovered)?-1:1;});break;case\"cases\":casesList.sort(function(a,b){return parseInt(a.cases)>parseInt(b.cases)?-1:1;});break;case\"deaths\":casesList.sort(function(a,b){return parseInt(a.deaths)>parseInt(b.deaths)?-1:1;});break;case\"todayCases\":casesList.sort(function(a,b){return parseInt(a.todayCases)>parseInt(b.todayCases)?-1:1;});break;case\"todayDeaths\":casesList.sort(function(a,b){return parseInt(a.todayDeaths)>parseInt(b.todayDeaths)?-1:1;});break;default:casesList.sort(function(a,b){return parseInt(a.cases)>parseInt(b.cases)?-1:1;});break;}for(var i=0;i<casesList.length;i++){if(casesList[i].country.toLowerCase().includes(str.toLowerCase())){deathList.push(casesList[i].deaths);countryList.push(casesList[i].country);caseList.push(casesList[i].cases);todayDeathsList.push(casesList[i].todayDeaths);todayCasesList.push(casesList[i].todayCases);activeList.push(casesList[i].active);recoveredList.push(casesList[i].recovered);}}if(str!==null&&str!==\"\"){try{this.setState({country:countryList[0]});//               this.state.country = countryList[0];\n}catch(_unused){}}var datasetBars=[];var phrase=this.state.phrases[1];for(var index=0;index<this.state.phrases.length;index++){if(this.state.phrases[index].lang===this.state.language){phrase=this.state.phrases[index];}}//        this.state.phrase = phrase;\nthis.setState({phrase:phrase});document.title=phrase.title;var dataType=\"bar\";if(str===\"\"){dataType=\"line\";}datasetBars=[{label:phrase.totalDeaths,type:dataType,data:deathList,backgroundColor:\"#7F171F\",borderColor:\"#7F171F\",fill:\"#7F171F\"},{label:phrase.totalCases,data:caseList,type:dataType,backgroundColor:\" #003366\",borderColor:\" #003366\",fill:\" #003366\"},{label:phrase.todayCases,type:dataType,backgroundColor:\"#B67721\",borderColor:\"#B67721\",fill:\"#B67721\",data:todayCasesList},{label:phrase.recovered,type:dataType,backgroundColor:\"#21B6A8\",borderColor:\"#21B6A8\",fill:\"#21B6A8\",data:recoveredList},{label:phrase.todayDeaths,type:dataType,backgroundColor:\"#B6212D\",borderColor:\"#B6212D\",data:todayDeathsList,labels:todayDeathsList},{label:phrase.active,type:dataType,labels:activeList,backgroundColor:\"#177F75\",borderColor:\"#177F75\",fill:\"#177F75\",data:activeList}];try{this.myChart.destroy();}catch(_unused2){}this.myChart=new Chart(myChartRef,{type:\"bar\",data:{labels:countryList,datasets:datasetBars},options:{maintainAspectRatio:false,responsive:true}});this.myChart.canvas.parentNode.style.height='90vh';}},{key:\"changeLanguage\",value:function(){var _changeLanguage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(lang){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.setState({language:lang});case 2:this.drawChartJS(this.state.casesList);case 3:case\"end\":return _context.stop();}}},_callee,this);}));function changeLanguage(_x){return _changeLanguage.apply(this,arguments);}return changeLanguage;}()},{key:\"getLang\",value:function getLang(){return this.state.language;}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(\"div\",null,React.createElement(\"h1\",null,this.state.phrase.title),React.createElement(\"div\",{className:\"infoData\"},React.createElement(\"div\",null,this.state.phrase.language,React.createElement(\"select\",{className:\"infoChild\",onChange:function onChange(e){return _this3.changeLanguage(e.target.value);}},React.createElement(\"option\",{value:\"en\"},\"English\"),React.createElement(\"option\",{value:\"mk\"},\"\\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"))),React.createElement(\"div\",null,this.state.phrase.country,React.createElement(\"input\",{className:\"infoChild\",placeholder:this.state.language==='en'?'Type a country':'Внесете држава',onChange:function onChange(e){return _this3.drawChartJS(_this3.state.casesList,e.target.value);}}),React.createElement(\"input\",{type:\"button\",className:\"infoChild\",onClick:function onClick(e){return _this3.getTimeline(_this3.state.casesList,e.target.value);},value:this.state.language==='en'?'Chronological':'Хронолошки'})),React.createElement(\"div\",null,this.state.language==='en'?'Order by':'Сортирај по',React.createElement(\"select\",{className:\"infoChild\",onChange:function onChange(e){return _this3.drawChartJS(_this3.state.casesList,\"\",e.target.value);}},React.createElement(\"option\",{value:\"cases\"},this.state.phrase.totalCases),React.createElement(\"option\",{value:\"deaths\"},this.state.phrase.totalDeaths),React.createElement(\"option\",{value:\"todayCases\"},this.state.language==='en'?'Number of today cases':'Денешни случаи'),React.createElement(\"option\",{value:\"todayDeaths\"},this.state.language==='en'?'Number of today deaths':'Денешни смртни случаи'),React.createElement(\"option\",{value:\"active\"},this.state.language==='en'?'Number of active cases':'Активни случаи'),React.createElement(\"option\",{value:\"recovered\"},this.state.language==='en'?'Number of recovered cases':'Излечени случаи'))),React.createElement(\"div\",null)),React.createElement(\"canvas\",{id:\"myChart\",ref:this.chartRef}));}}]);return BarChart;}(Component);export default BarChart;","map":{"version":3,"sources":["/Users/tom/Desktop/coronavirus-statistics/src/BarChart.js"],"names":["React","Component","Chart","BarChart","chartRef","createRef","state","casesList","country","language","phrases","phrase","document","title","fetch","headers","process","env","REACT_APP_API_KEY","then","results","json","data","countriesList","countries_stat","map","c","push","cases","replace","country_name","deaths","total_recovered","new_deaths","new_cases","active_cases","drawChartJS","setState","renderTableData","undefined","window","location","href","alert","errorMsg","str","orderBy","myChartRef","current","getContext","deathList","countryList","caseList","todayDeathsList","todayCasesList","activeList","recoveredList","sort","a","b","parseInt","active","recovered","todayCases","todayDeaths","i","length","toLowerCase","includes","datasetBars","index","lang","dataType","label","totalDeaths","type","backgroundColor","borderColor","fill","totalCases","labels","myChart","destroy","datasets","options","maintainAspectRatio","responsive","canvas","parentNode","style","height","e","changeLanguage","target","value","getTimeline"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Chart from \"chart.js\";\n\n\nclass BarChart extends Component {\n    myChart;\n    chartRef = React.createRef();\n    constructor(){\n        super();\n        this.state={\n            casesList:[],\n            country: null,\n            language: 'en',\n            phrases: [{\"lang\": \"mk\",\"language\": \"Јазик\",\"country\":\"Држава\", \"title\": \"Корона Статистика\", \"errorMsg\":\"Ве молиме, внесете држава.\", \"totalCases\":\"Вкупно случаи\", \"totalDeaths\":\"Вкупно смртни случаи\", \"active\":\"Активни\",\"recovered\":\"Излечени\",\"todayCases\":\"Денешни случаи\",\"todayDeaths\":\"Денешни смртни случаи\"}, {\"lang\":\"en\",\"totalCases\":\"Total cases\", \"totalDeaths\": \"Total deaths\", \"active\":\"Active\",\"recovered\":\"Recovered\",\"todayCases\":\"Today cases\",\"todayDeaths\":\"Today deaths\",  \"errorMsg\":\"Please, input a country.\",\"title\":\"Coronavirus Statistics\",\"language\": \"Language\",\"country\":\"Country\"}],\n            phrase: null\n        };\n        this.state.phrase = this.state.phrases[1];\n        document.title = this.state.phrase.title;\n    }\n    \n     renderTableData() {\n        fetch('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n        {  \n            headers: {\n              'X-RapidAPI-Host': 'coronavirus-monitor.p.rapidapi.com', \n              'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n            }\n        })\n            .then(results=>{\n            return results.json();\n        })\n        .then(data => {\n            let casesList = [];\n            let countriesList = [];\n            data.countries_stat.map((c)=>{\n                return(\n                    casesList.push({\"cases\": c.cases.replace(',',''), \"country\":c.country_name, \"deaths\":c.deaths.replace(',',''), \"recovered\":c.total_recovered.replace(',',''), \"todayDeaths\":c.new_deaths.replace(',',''), \"todayCases\":c.new_cases.replace(',',''), \"active\":c.active_cases.replace(',','')}),\n                    countriesList.push(c.country_name)\n                )\n            });\n            this.drawChartJS(casesList);            \n            this.setState({casesList: casesList});\n        })\n     }\n     componentDidMount() {\n      this.renderTableData();\n    }\n    getTimeline()\n    {\n        if(this.state.country !== undefined && this.state.country !== null)\n        {\n            window.location.href = '/timechart/country/'+this.state.country;\n        }\n        else{\n            alert(this.state.phrase.errorMsg);\n        }\n    }\n    drawChartJS(casesList, str, orderBy){\n        if(str == null)\n        {\n            str=\"\";\n        }\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        let deathList = [];\n        let countryList = [];\n        let caseList = [];\n        let todayDeathsList = [];\n        let todayCasesList = [];\n        let activeList = [];\n        let recoveredList = [];\n        \n        switch(orderBy){\n            case \"active\":\n                casesList.sort((a, b) => (parseInt(a.active) > parseInt(b.active)) ? -1 : 1);\n                break;\n            case \"recovered\":\n                casesList.sort((a, b) => (parseInt(a.recovered) > parseInt(b.recovered)) ? -1 : 1);\n                break;\n            case \"cases\":\n                casesList.sort((a, b) => (parseInt(a.cases) > parseInt(b.cases)) ? -1 : 1);\n                break;\n            case \"deaths\":\n                casesList.sort((a, b) => (parseInt(a.deaths) > parseInt(b.deaths)) ? -1 : 1);\n                break;\n            case \"todayCases\":\n                casesList.sort((a, b) => (parseInt(a.todayCases) > parseInt(b.todayCases)) ? -1 : 1);\n                break;\n            case \"todayDeaths\":\n                casesList.sort((a, b) => (parseInt(a.todayDeaths) > parseInt(b.todayDeaths)) ? -1 : 1);\n                break;\n            default:\n                casesList.sort((a, b) => (parseInt(a.cases) > parseInt(b.cases)) ? -1 : 1);\n                break;\n        }\n\n        for(let i = 0; i<casesList.length;i++)\n        {\n            if(casesList[i].country.toLowerCase().includes(str.toLowerCase())){\n                deathList.push(casesList[i].deaths);\n                countryList.push(casesList[i].country);\n                caseList.push(casesList[i].cases);\n                todayDeathsList.push(casesList[i].todayDeaths);\n                todayCasesList.push(casesList[i].todayCases);\n                activeList.push(casesList[i].active);\n                recoveredList.push(casesList[i].recovered)\n            }\n        }\n        if(str !== null && str !== \"\")\n        {\n            try{\n                this.setState({\n                    country:  countryList[0]\n                  })\n                //               this.state.country = countryList[0];\n            }\n            catch{}\n        }\n        let datasetBars = [];\n        let phrase = this.state.phrases[1];\n        for (let index = 0; index < this.state.phrases.length; index++) {\n            if(this.state.phrases[index].lang === this.state.language)\n            {\n                phrase = this.state.phrases[index];   \n            }\n        }\n//        this.state.phrase = phrase;\n        this.setState({\n            phrase:  phrase\n        })      \n        document.title = phrase.title;\n\n        let dataType = \"bar\";\n        if(str===\"\")\n        {\n            dataType = \"line\";\n        }\n        datasetBars = [{\n            label: phrase.totalDeaths,\n            type: dataType,\n            data: deathList,\n            backgroundColor: \"#7F171F\",\n            borderColor: \"#7F171F\",\n            fill: \"#7F171F\",\n          },\n        {                    \n            label: phrase.totalCases,\n            data: caseList,\n            type: dataType,\n            backgroundColor:\" #003366\",\n            borderColor:\" #003366\",\n            fill:\" #003366\",\n        },\n        {\n            label: phrase.todayCases,\n            type: dataType,\n            backgroundColor:\"#B67721\",\n            borderColor:\"#B67721\",\n            fill:\"#B67721\",\n            data: todayCasesList,\n        },\n        {\n            label: phrase.recovered,\n            type: dataType,\n            backgroundColor:\"#21B6A8\",\n            borderColor:\"#21B6A8\",\n            fill:\"#21B6A8\",\n            data: recoveredList,\n        },\n        {\n            label: phrase.todayDeaths,\n            type: dataType,\n            backgroundColor: \"#B6212D\",\n            borderColor: \"#B6212D\",\n            data: todayDeathsList,\n            labels: todayDeathsList\n        },\n        {\n            label: phrase.active,\n            type: dataType,\n            labels: activeList,\n            backgroundColor:\"#177F75\",\n            borderColor:\"#177F75\",\n            fill:\"#177F75\",\n            data: activeList,\n        }\n      ];\n        \n        try{\n            this.myChart.destroy();\n        }\n        catch{}\n\n      this.myChart = new Chart(myChartRef, {\n          type: \"bar\",\n          data: {\n              labels: countryList,\n              datasets: datasetBars\n          },\n          options: { \n              maintainAspectRatio: false,\n              responsive: true\n          }\n      });\n      this.myChart.canvas.parentNode.style.height = '90vh';\n    }\n    \n      async changeLanguage(lang) {\n        await this.setState({\n          language:  lang\n        })\n        this.drawChartJS(this.state.casesList);\n      }\n      getLang(){\n          return this.state.language;\n      }\n    render(){\n     return (\n     <div>\n    <h1>{this.state.phrase.title}</h1>\n     <div className=\"infoData\">\n         <div>\n         {this.state.phrase.language}\n         \n            <select className=\"infoChild\" onChange={(e)=>this.changeLanguage(e.target.value)}>\n                <option value=\"en\">English</option>\n                <option value=\"mk\">Македонски</option>\n            </select>\n            </div><div>\n            {this.state.phrase.country}\n            <input className=\"infoChild\" placeholder={this.state.language === 'en' ? 'Type a country' : 'Внесете држава'} onChange={(e) => this.drawChartJS(this.state.casesList, e.target.value)} ></input>\n            <input type=\"button\" className=\"infoChild\" onClick={(e) => this.getTimeline(this.state.casesList, e.target.value)} value={this.state.language === 'en' ? 'Chronological' : 'Хронолошки'} ></input>\n            </div><div>{this.state.language === 'en' ? 'Order by' : 'Сортирај по'}\n            <select className=\"infoChild\" onChange={(e)=>this.drawChartJS(this.state.casesList,\"\",e.target.value)}>\n                <option value=\"cases\">{this.state.phrase.totalCases}</option>\n                <option value=\"deaths\">{this.state.phrase.totalDeaths}</option>\n                <option value=\"todayCases\">{this.state.language==='en'? 'Number of today cases': 'Денешни случаи'}</option>\n                <option value=\"todayDeaths\">{this.state.language==='en'? 'Number of today deaths': 'Денешни смртни случаи'}</option>\n                <option value=\"active\">{this.state.language==='en'? 'Number of active cases': 'Активни случаи'}</option>\n                <option value=\"recovered\">{this.state.language==='en'? 'Number of recovered cases': 'Излечени случаи'}</option>\n            </select>\n            </div>\n            <div>\n            </div>\n        </div>\n            <canvas \n                id=\"myChart\"\n                ref={this.chartRef}\n            />\n        </div>\n    )\n    }\n  }\n      \n  export default BarChart;"]},"metadata":{},"sourceType":"module"}